@model  WebApi.Models.ApplicationUser
@{
    ViewBag.Title = "CartIndex";
}

<div id="cart" class="" data-bind="if:products">
    <h1>购物车</h1>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>产品名称</th>
                <th>产品价格</th>
                <th>数量</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="foreach:products">
            <tr data-bind="with:product">
                <td data-bind="text:Name"></td>
                <td data-bind="text:Price"></td>
                <td data-bind="text:$parent.Quantity"></td>
                <td class="table-danger"><a href="#" data-bind="click: $parent.removeFromCart">删除</a></td>
            </tr>
        </tbody>
    </table>
    <div class="col-4 offset-8">
        <a href="@ViewBag.returnUrl" class="btn btn-primary">继续购物</a>
        <input class="btn btn-success " type="button" value="结算" data-bind="click:$root.addOrder" />
    </div>
</div>
<div id="order-details" class="" data-bind="if:orderDetails()">
    <h2>订单细节<span></span></h2>
    <table class="details">
        <thead>
            <tr>
                <th>产品名称</th>
                <th> 产品价格</th>
                <th>数量</th>
                <th> 合计</th>
            </tr>
        </thead>
        <tbody data-bind="foreach:orderDetails().details">
            <tr>
                <td data-bind="text:ProductName"></td>
                <td data-bind="text:Price"></td>
                <td data-bind="text:Quantity"></td>
                <td data-bind="text:(Price*Quantity).toFixed(2)"></td>
            </tr>
        </tbody>
    </table>
    <p>总额: <span data-bind="text:orderDetails().total()"></span></p>
</div>
<script>
    function AppViewModel() {
        var self = this;
        self.products = ko.observableArray();
        var url = "@Url.HttpRouteUrl("DefaultApi", new { controller = "Cart" })";
        function ProductViewModel(root, product, quantity) {
            var self = this;
            self.product = product;
            self.Quantity = quantity;
            self.removeFromCart = function () {
                $.ajax({
                    type: "Delete",
                    url: url+ "?id=" + this.product.Id,
                    success: function (data) {
                        root.products.remove(self);
                    }
                });
            };
        }
        function OrderDetailsViewModel(order) {
            var self = this;
            self.details = order.Details;
            this.total = function () {
                var sum = 0;
                $.each(self.details, function (index, item) {
                    sum += item.Price * item.Quantity;
                });
                return "$" + sum;
            };

        }
        self.addOrder = function () {
            var orderDetails = new Array();
            $.each(self.products(), function (index, item) {
                orderDetails.push({ ProductId: item.product.Id, Quantity: item.Quantity })
            });
            var order = { Details: orderDetails };


            $.ajax({
                type: "Delete",
                url: url,
                data: { userId:@Model.Id},
                success: function () {
                    self.products.removeAll();
                    self.orderDetails(new OrderDetailsViewModel(order));
                }
            });
        };
        $.each(@Model.CartItems, function (index, item) {
            self.products.push(new ProductViewModel(self, item.Product, item.Quantity));
        });
    }
    ko.applyBindings(new AppViewModel());
</script>
